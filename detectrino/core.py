# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_core.ipynb (unless otherwise specified).

__all__ = ['patch_classmethod', 'storage_path', 'Cfg', 'mergedicts']

# Cell
from fastai2.vision.all import *

# Cell
def patch_classmethod(f):
    cls = next(iter(f.__annotations__.values()))
    return patch_to(cls, cls_method=True)(f)

# Cell
@patch
def numpy(self:PILImage): return np.array(self)
@patch
def cv2(self:PILImage): return self.numpy()[..., ::-1]

# Cell
storage_path = Path.home()/'.detectrino'
storage_path.mkdir(exist_ok=True)

# Cell
class Cfg:
    def to_cfg(self):   raise NotImplementedError
    def __repr__(self): return self.to_cfg().__repr__()

# Cell
def mergedicts(d1, d2, path=None):
    for key in d2:
        if key in d1:
            if isinstance(d1[key], dict) and isinstance(d2[key], dict):
                mergedicts(d1[key], d2[key])
                continue
        d1[key] = d2[key] if d2[key] is not None else d1.get(key)
    return d1